@page "/login"

@inject NavigationManager NavigationManager
@inject IValidationService ValidationService
@inject IAuthenticationService AuthenticationService
@inject UserSessionService UserSessionService

<Form Id="form-login">
    <FormGroup>
        <Input Type="text" Placeholder="Username" OnChange="@OnUsernameChange" />
    </FormGroup>
    <FormGroup>
        <Input Type="password" Placeholder="Password" OnChange="@OnPasswordChange" />
    </FormGroup>
    <FormGroup>
        <Checkbox Text="Remember Me" OnChange="@OnRememberMeChange" />
        <div class="d-flex flex-shrink-0">
            <a class="text" href="recover">Forgot password?</a>
        </div>
    </FormGroup>
    <FormGroup>
        <Button Enabled="@_buttonEnabled" Text="Login" OnClick="@LoginAsync" Size="ButtonSize.Full"></Button>
    </FormGroup>
</Form>

@code {

    private bool _buttonEnabled;

    private string _username;
    private string _password;
    private bool _rememberMe;

    private async Task LoginAsync()
    {

        var result = await AuthenticationService.Login(_username, _password, _rememberMe);
        if (result)
        {
            await UserSessionService.LoadUser();

            StateHasChanged();

            NavigationManager.NavigateTo("/");
        }
    }

    private void ValidateInput()
    {
        _buttonEnabled = ValidationService.ValidateLoginInput(_username, _password);

        StateHasChanged();
    }

    public Task OnUsernameChange(string value)
    {
        _username = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnPasswordChange(string value)
    {
        _password = value;

        ValidateInput();

        return Task.CompletedTask;
    }

    public Task OnRememberMeChange(bool value)
    {
        _rememberMe = value;

        ValidateInput();

        return Task.CompletedTask;
    }
}
