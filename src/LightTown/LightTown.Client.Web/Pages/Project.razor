@page "/projects/{ProjectId:int}"

@using LightTown.Client.Services.Projects
@using LightTown.Client.Services.Users
@using LightTown.Client.Web.Services
@using LightTown.Core.Models.Users

@inject IUserDataService UserDataService
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthenticationService

<Grid>
    <GridColumn ColumnSize="ColumnSize.Full">
        <Grid>
            <GridColumn ColumnSize="ColumnSize.Small">
            </GridColumn>
            <GridColumn ColumnSize="ColumnSize.Medium">
                <Grid>
                    <GridColumn ColumnSize="ColumnSize.Full">
                        <GridItem>
                            <h1> <br /> Name: @_project?.ProjectName</h1>
                        </GridItem>
                    </GridColumn>
                    <GridColumn ColumnSize="ColumnSize.Small">
                    </GridColumn>
                </Grid>
            </GridColumn>
        </Grid>

        <Grid>
            <GridColumn ColumnSize="ColumnSize.Small">
            </GridColumn>
            <GridColumn ColumnSize="ColumnSize.Medium">
                <Grid>
                    <GridColumn ColumnSize="ColumnSize.Full">
                        <GridItem>
                            <p1>Creation Date: @_project?.CreationDateTime.ToString("dd/MM/yyyy") </p1>
                        </GridItem>
                    </GridColumn>
                </Grid>
            </GridColumn>
        </Grid>


        <Grid>
            <GridColumn ColumnSize="ColumnSize.Small">
                <GridItem>
                    <ListGroup Class="mw-300 m-auto">
                        <ListGroupHeader Text="@_project.ProjectName"></ListGroupHeader>
                        <ListGroupItem IsLink="true" Link="@($"/projects/{ProjectId}")" Text="Overview"></ListGroupItem>
                        <ListGroupItem IsLink="true" Link="@($"/projects/{ProjectId}/members")" Text="Members" Active="true"></ListGroupItem>
                        <ListGroupItem IsLink="true" Link="@($"/projects/{ProjectId}/timeline")" Text="Messages"></ListGroupItem>
                    </ListGroup>
                </GridItem>
            </GridColumn>
            <GridColumn ColumnSize="ColumnSize.Medium">
                <hr class="underLine" style="border:solid;color:#298ECC" />
                <Grid>
                    <GridColumn ColumnSize="ColumnSize.Small">
                        <div>
                            <GridItem>
                                @if (_project.HasImage)
                                {
                                    <img class="img-detail" src="@($"/projects/images/{_project.ImageFilename}")" />
                                }
                                else
                                {
                                    <img class="img-detail" src="https://www.expert.nl/media/frontend/catalog/products/372569585/630x630/372569585-3216374.jpg" />
                                }
                            </GridItem>
                        </div>
                    </GridColumn>
                    <GridColumn ColumnSize="ColumnSize.Medium">
                        <GridItem>
                            <p1>
                                @_project.ProjectDescription
                            </p1>
                            <div class="d-inline">
                                <br />
                                @foreach (var tag in _project.Tags) //return List<int> at the moment. Need to be strings?
                                {
                                    <Tag Text="@tag.Name" />
                                }
                            </div>
                        </GridItem>
                    </GridColumn>
                </Grid>
            </GridColumn>
        </Grid>

        <Grid>
            <GridColumn ColumnSize="ColumnSize.Small">
            </GridColumn>
            <GridColumn ColumnSize="ColumnSize.Medium">
                <Grid>
                    <GridColumn ColumnSize="ColumnSize.Full">
                        <GridItem>
                            <h2><br />Messages</h2>
                        </GridItem>
                    </GridColumn>
                    <GridColumn ColumnSize="ColumnSize.Small">
                    </GridColumn>
                </Grid>
            </GridColumn>
        </Grid>
    </GridColumn>
</Grid>

@code {
    [Parameter]
    public int ProjectId { get; set; }

    private LightTown.Core.Models.Projects.Project _project = new Core.Models.Projects.Project();

    private bool active;

    private List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        if (!AuthenticationService.HasAccessToPage(NavigationManager.Uri))
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        _project = await UserDataService.GetProject(ProjectId);

    }

    private async Task RemoveMemberFromProject(int userId)
    {
        await ProjectService.RemoveMember(ProjectId, userId);
    }

    private async Task AddMemberToProject(int userId)
    {
        await ProjectService.AddMember(userId, ProjectId);

        _project.Members = await ProjectService.GetProjectMembers(ProjectId);

        StateHasChanged();
    }
}
