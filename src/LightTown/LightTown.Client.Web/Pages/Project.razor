@page "/projects/{ProjectId:int}"

@using LightTown.Client.Services.Projects
@using LightTown.Client.Services.Users

@inject IUserDataService UserDataService
@inject IProjectService ProjectService

<h3>ProjectPage</h3>

<p1>Name: @_project?.ProjectName</p1><br/>
<p1>Description: @_project?.ProjectDescription</p1><br/>
<p1>Creation Date: @_project?.CreationDateTime</p1>

<Grid>
    <GridColumn ColumnSize="ColumnSize.Full">
        @if (_project?.Members != null)
        {
            foreach (var member in _project.Members)
            {
                <GridItem>

                    <Card>
                        <FormGroup>
                            <p1>Name: @member.Username</p1>
                        </FormGroup>
                        <FormGroup>
                            <p1>Email: @member.Email</p1>
                        </FormGroup>
                        <FormGroup>
                            <Button Enabled="@true" Text="Remove From Project" OnClick="@(() => RemoveMemberFromProject(member.Id))" Size="ButtonSize.Full"></Button>
                        </FormGroup>
                    </Card>
                </GridItem>
            }
        }
    </GridColumn>
</Grid>

@code {
    [Parameter]
    public int ProjectId { get; set; }

    private LightTown.Core.Models.Projects.Project _project;

    private bool active;

    private List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        _project = await UserDataService.GetProject(ProjectId);
    }

    private async Task RemoveMemberFromProject(int userId)
    {
        await ProjectService.RemoveMember(ProjectId, userId);
    }
}
