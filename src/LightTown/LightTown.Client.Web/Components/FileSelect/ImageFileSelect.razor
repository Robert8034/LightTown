@using System.IO
@inherits LightTown.Client.Web.Components.FileSelect.FileSelect

<div class="imagefileselect img-thumbnail @Class">
    @if (_isSvg)
    {
        <svg>
            <use xlink:href="libs/fontawesome-free-5.13.0/sprites/solid.svg#user"></use>
        </svg>
    }
    else
    {
        <img src="@(string.IsNullOrEmpty(_newSrc) ? Src : _newSrc)"/>
    }
    <input id="imagefileselect-select" class="d-none" type="file" accept=".png,.jpg,.jpeg" @ref="_element"/>
    <input class="imagefileselect-select button button-medium" type="button" value="Browse..." onclick="document.getElementById('imagefileselect-select').click();" />
    @if (CanSave)
    {
        <Button Class="imagefileselect-save" Text="Save" Type="ButtonType.Success" OnClick="@(async () => await SaveAvatar())"></Button>
    }
</div>

@code {
    [Parameter]
    public Action<FileListEntry> OnChange { get; set; }

    [Parameter]
    public bool CanSave { get; set; }

    [Parameter]
    public Func<Task> OnSave { get; set; }

    private string _newSrc;

    private bool _isSvg;

    protected override void OnInitialized()
    {
        _isSvg = IsSvg(Src);
    }

    private bool IsSvg(string file)
    {
        return Path.GetExtension(file) == ".svg" || Path.GetExtension(file).ToLower().StartsWith(".svg#");
    }

    [JSInvokable]
    public async Task NotifyChange(FileListEntry[] files)
    {
        var file = files[0];

        file.Owner = this;

        byte[] bytes;

        using (var stream = OpenFileStream(file))
        using (var memoryStream = new MemoryStream())
        {
            await stream.CopyToAsync(memoryStream);
            bytes = memoryStream.ToArray();
        }

        string base64 = Convert.ToBase64String(bytes);

        _newSrc = $"data:image/png;base64, {base64}";

        _isSvg = IsSvg(file.Name);

        StateHasChanged();

        OnChange?.Invoke(file);
    }

    private async Task SaveAvatar()
    {
        if (OnSave != null)
        {
            await OnSave.Invoke();
        }
    }

}
